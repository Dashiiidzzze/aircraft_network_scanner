# version: '3.8'

# services:

#   avionics:
#     build: ./avionics
#     networks:
#       - internal
#     ports: []
#     restart: unless-stopped

#   pilot_interface:
#     build: ./pilot_interface
#     networks:
#       - internal
#     ports:
#       - "8080:80"
#     depends_on:
#       - avionics
#     restart: unless-stopped

#   maintenance_server:
#     build: ./maintenance_server
#     networks:
#       - internal
#     ports:
#       - "5000:5000"
#     depends_on:
#       - avionics
#     restart: unless-stopped

#   ife_server:
#     build: ./ife_server
#     networks:
#       - public
#     ports:
#       - "8081:80"
#     restart: unless-stopped

#   passenger_device:
#     build: ./passenger_device
#     networks:
#       - public
#     depends_on:
#       - ife_server
#     restart: "no"

#   secure_gateway:
#     build: ./secure_gateway
#     networks:
#       - internal
#       - public
#     ports:
#       - "8443:443"
#     restart: unless-stopped

#   sensors:
#     build: ./sensors
#     networks: [ internal ]

#   controllers:
#     build: ./controllers
#     networks: [ internal ]

#   actuators:
#     build: ./actuators
#     networks: [ internal ]

# networks:
#   internal:
#     driver: bridge
#   public:
#     driver: bridge



version: '3.8'

services:
  # –¥–ª—è mqtt
  mosquitto-broker:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto-broker
    networks:
      - avionics_bus
    ports:
      - "1883:1883"      # MQTT
      - "9001:9001"      # WebSocket (–µ—Å–ª–∏ –Ω–∞–¥–æ)
    volumes:
      - ./config:/mosquitto/config
      - ./data:/mosquitto/data
      - ./log:/mosquitto/log

  # üß† –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–¥—É–ª—å
  # –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ "–ø—Å–µ–≤–¥–æ-CAN" (—á–µ—Ä–µ–∑ UDP)
  avionics:
    build: ./avionics
    networks:
      - avionics_bus
    ports: []
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - mosquitto-broker
      - secure_gateway
    restart: unless-stopped

  # üßë‚Äç‚úàÔ∏è –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–∏–ª–æ—Ç–∞ ‚Äî –¥–æ—Å—Ç—É–ø –∫ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: HTTP (–ø–æ—Ä—Ç 80), —Å–æ–µ–¥–∏–Ω—ë–Ω —Å avionics –∏ —à–ª—é–∑–æ–º
  pilot_interface:
    build: ./pilot_interface
    networks:
      - avionics_bus      # CAN-–ø–æ–¥–æ–±–Ω–∞—è —Å–µ—Ç—å
      - control_network   # —Å–ª—É–∂–µ–±–Ω–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–µ—Ç—å
    ports:
      - "8080:80"          # HTTP ‚Äî –£–Ø–ó–í–ò–ú!
    depends_on:
      - avionics
    #restart: unless-stopped

  # üß∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –ª–æ–≥–æ–≤
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: HTTP API (Flask), DEBUG-—Ä–µ–∂–∏–º
  maintenance_server:
    build: ./maintenance_server
    networks:
      - control_network
    ports:
      - "5000:5000"        # HTTP API ‚Äî –£–Ø–ó–í–ò–ú!
    environment:
      - DEBUG=True         # –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª—ë–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
    depends_on:
      - avionics
    #restart: unless-stopped

  # üé¨ IFE-—Å–µ—Ä–≤–µ—Ä (In-Flight Entertainment) –¥–ª—è –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: HTTP (–ø–æ—Ä—Ç 80), –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–π —Å–µ—Ç–∏
  ife_server:
    build: ./ife_server
    networks:
      - public_access
    ports:
      - "8081:80"         # HTTP ‚Äî –£–Ø–ó–í–ò–ú!
    #restart: unless-stopped

  # üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ ‚Äî –∫–ª–∏–µ–Ω—Ç IFE-—Å–µ—Ä–≤–∏—Å–∞
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: HTTP, –¥–æ—Å—Ç—É–ø –∫ ife_server
  passenger_device:
    build: ./passenger_device
    networks:
      - public_access
    depends_on:
      - ife_server
    #restart: "no"

  # üîê –ó–∞—â–∏—â—ë–Ω–Ω—ã–π —à–ª—é–∑ ‚Äî —Ç–æ—á–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —Å–µ—Ç—è–º–∏
  # –ü—Ä–æ—Ç–æ–∫–æ–ª—ã: HTTPS (8443), –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  secure_gateway:
    build: ./secure_gateway
    networks:
      - public_access      # –ø–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∞—è —Å–µ—Ç—å
      - control_network    # –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–ª—É–∂–µ–±–Ω–∞—è
      - avionics_bus       # CAN/UDP —Å–µ—Ç—å
    environment:
      - PYTHONUNBUFFERED=1  # –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    ports:
      - "8443:443"         # HTTPS ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª
    volumes:
      - ./secure_gateway/server.crt:/app/server.crt
      - ./secure_gateway/server.key:/app/server.key # –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    depends_on:
      - mosquitto-broker
    #restart: unless-stopped

  # üì° –°–µ–Ω—Å–æ—Ä—ã ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –¥–∞–≤–ª–µ–Ω–∏–µ –∏ —Ç.–¥.)
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: –ø—Å–µ–≤–¥–æ-CAN —á–µ—Ä–µ–∑ UDP, –≤–µ—â–∞–Ω–∏–µ –≤ avionics_bus
  sensors:
    build: ./sensors
    depends_on:
      - controllers
    networks: [ avionics_bus ]

  # üß† –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã ‚Äî –ø–æ–ª—É—á–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ–Ω—Å–æ—Ä–æ–≤ –∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏—è
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: –ø—Å–µ–≤–¥–æ-CAN (UDP)
  controllers:
    build: ./controllers
    depends_on:
      - actuators
    networks: [ avionics_bus ]

  # ‚öôÔ∏è –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã ‚Äî –ø—Ä–∏–≤–æ–¥—è—Ç –≤ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ–º–∞–Ω–¥—ã (–∑–∞–∫—Ä—ã–ª–∫–∏, —à–∞—Å—Å–∏ –∏ —Ç.–¥.)
  # –ü—Ä–æ—Ç–æ–∫–æ–ª: –ø—Å–µ–≤–¥–æ-CAN (UDP), –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
  actuators:
    build: ./actuators
    networks: [ avionics_bus ]

  # üíÄ –ó–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫ ‚Äî –º–æ–∂–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–∏ –∏–ª–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∞—Ç–∞–∫–∏
  # –î–æ—Å—Ç—É–ø –∫ control –∏ public —Å–µ—Ç—è–º
  # attacker_node:
  #   build: ./attacker_node
  #   networks:
  #     - public_access
  #     - control_network
  #   restart: "no"  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ —Ç–µ—Å—Ç–µ

  # üïµÔ∏è –°–Ω–∏—Ñ—Ñ–µ—Ä ‚Äî —Å–ª—É—à–∞–µ—Ç avionics_bus
  # –ú–æ–∂–µ—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞—Ç—å UDP –ø–∞–∫–µ—Ç—ã –∏ –≤—ã—è–≤–ª—è—Ç—å —É—è–∑–≤–∏–º–æ—Å—Ç–∏/–∞–Ω–æ–º–∞–ª–∏–∏
  # sniffer:
  #   build: ./sniffer
  #   networks:
  #     - avionics_bus
  #   restart: unless-stopped

  security_scanner:
    build: ./security_scanner
    networks:
      - avionics_bus       # —Å–∫–∞–Ω–∏—Ä—É–µ—Ç —Å–µ–Ω—Å–æ—Ä—ã, –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã, —à–ª—é–∑
      - control_network    # —Å–∫–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ—Ö. —Å–µ—Ä–≤–µ—Ä –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–∏–ª–æ—Ç–∞
    depends_on:
      - avionics
      - pilot_interface
      - maintenance_server
      - ife_server
    restart: "no"

networks:
  # CAN-–ø–æ–¥–æ–±–Ω–∞—è —Å–µ—Ç–µ–≤–∞—è —à–∏–Ω–∞ (—ç–º—É–ª–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ bridge + UDP)
  avionics_bus:
    driver: bridge
    name: avionics_bus_net

  # –°–ª—É–∂–µ–±–Ω–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–µ—Ç—å (—ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç ARINC 664 / AFDX)
  control_network:
    driver: bridge
    name: control_net

  # –ü–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∞—è —Å–µ—Ç—å ‚Äî –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è–º –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
  public_access:
    driver: bridge
    name: public_net
